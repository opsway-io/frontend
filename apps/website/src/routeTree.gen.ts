// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")();
const TermsOfServiceIndexLazyImport = createFileRoute("/terms-of-service/")();
const PrivacyPolicyIndexLazyImport = createFileRoute("/privacy-policy/")();
const PricingIndexLazyImport = createFileRoute("/pricing/")();

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const TermsOfServiceIndexLazyRoute = TermsOfServiceIndexLazyImport.update({
  path: "/terms-of-service/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/terms-of-service/index.lazy").then((d) => d.Route),
);

const PrivacyPolicyIndexLazyRoute = PrivacyPolicyIndexLazyImport.update({
  path: "/privacy-policy/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/privacy-policy/index.lazy").then((d) => d.Route),
);

const PricingIndexLazyRoute = PricingIndexLazyImport.update({
  path: "/pricing/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/pricing/index.lazy").then((d) => d.Route),
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/pricing/": {
      preLoaderRoute: typeof PricingIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/privacy-policy/": {
      preLoaderRoute: typeof PrivacyPolicyIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/terms-of-service/": {
      preLoaderRoute: typeof TermsOfServiceIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  PricingIndexLazyRoute,
  PrivacyPolicyIndexLazyRoute,
  TermsOfServiceIndexLazyRoute,
]);
